{-# LANGUAGE PatternSynonyms #-}

module Win32.Input.Keyboard.Constants (module Win32.Input.Keyboard.Constants) where

pattern VK_LBUTTON :: (Eq a, Num a) => a
pattern VK_LBUTTON = 0x01 -- Left mouse button
pattern VK_RBUTTON :: (Eq a, Num a) => a
pattern VK_RBUTTON = 0x02 -- Right mouse button
pattern VK_CANCEL :: (Eq a, Num a) => a
pattern VK_CANCEL = 0x03 -- Control-break processing
pattern VK_MBUTTON :: (Eq a, Num a) => a
pattern VK_MBUTTON = 0x04 -- Middle mouse button (three-button mouse)
pattern VK_XBUTTON1 :: (Eq a, Num a) => a
pattern VK_XBUTTON1 = 0x05 -- X1 mouse button
pattern VK_XBUTTON2 :: (Eq a, Num a) => a
pattern VK_XBUTTON2 = 0x06 -- X2 mouse button
pattern VK_BACK :: (Eq a, Num a) => a
pattern VK_BACK = 0x08 -- BACKSPACE key
pattern VK_TAB :: (Eq a, Num a) => a
pattern VK_TAB = 0x09 -- TAB key
pattern VK_CLEAR :: (Eq a, Num a) => a
pattern VK_CLEAR = 0x0C -- CLEAR key
pattern VK_RETURN :: (Eq a, Num a) => a
pattern VK_RETURN = 0x0D -- ENTER key
pattern VK_SHIFT :: (Eq a, Num a) => a
pattern VK_SHIFT = 0x10 -- SHIFT key
pattern VK_CONTROL :: (Eq a, Num a) => a
pattern VK_CONTROL = 0x11 -- CTRL key
pattern VK_MENU :: (Eq a, Num a) => a
pattern VK_MENU = 0x12 -- ALT key
pattern VK_PAUSE :: (Eq a, Num a) => a
pattern VK_PAUSE = 0x13 -- PAUSE key
pattern VK_CAPITAL :: (Eq a, Num a) => a
pattern VK_CAPITAL = 0x14 -- CAPS LOCK key
pattern VK_KANA :: (Eq a, Num a) => a
pattern VK_KANA = 0x15 -- IME Kana mode
pattern VK_HANGUEL :: (Eq a, Num a) => a
pattern VK_HANGUEL = 0x15 -- IME Hanguel mode (maintained for compatibility; use VK_HANGUL)
pattern VK_HANGUL :: (Eq a, Num a) => a
pattern VK_HANGUL = 0x15 -- IME Hangul mode
pattern VK_JUNJA :: (Eq a, Num a) => a
pattern VK_JUNJA = 0x17 -- IME Junja mode
pattern VK_FINAL :: (Eq a, Num a) => a
pattern VK_FINAL = 0x18 -- IME final mode
pattern VK_HANJA :: (Eq a, Num a) => a
pattern VK_HANJA = 0x19 -- IME Hanja mode
pattern VK_KANJI :: (Eq a, Num a) => a
pattern VK_KANJI = 0x19 -- IME Kanji mode
pattern VK_ESCAPE :: (Eq a, Num a) => a
pattern VK_ESCAPE = 0x1B -- ESC key
pattern VK_CONVERT :: (Eq a, Num a) => a
pattern VK_CONVERT = 0x1C -- IME convert
pattern VK_NONCONVERT :: (Eq a, Num a) => a
pattern VK_NONCONVERT = 0x1D -- IME nonconvert
pattern VK_ACCEPT :: (Eq a, Num a) => a
pattern VK_ACCEPT = 0x1E -- IME accept
pattern VK_MODECHANGE :: (Eq a, Num a) => a
pattern VK_MODECHANGE = 0x1F -- IME mode change request
pattern VK_SPACE :: (Eq a, Num a) => a
pattern VK_SPACE = 0x20 -- SPACEBAR
pattern VK_PRIOR :: (Eq a, Num a) => a
pattern VK_PRIOR = 0x21 -- PAGE UP key
pattern VK_NEXT :: (Eq a, Num a) => a
pattern VK_NEXT = 0x22 -- PAGE DOWN key
pattern VK_END :: (Eq a, Num a) => a
pattern VK_END = 0x23 -- END key
pattern VK_HOME :: (Eq a, Num a) => a
pattern VK_HOME = 0x24 -- HOME key
pattern VK_LEFT :: (Eq a, Num a) => a
pattern VK_LEFT = 0x25 -- LEFT ARROW key
pattern VK_UP :: (Eq a, Num a) => a
pattern VK_UP = 0x26 -- UP ARROW key
pattern VK_RIGHT :: (Eq a, Num a) => a
pattern VK_RIGHT = 0x27 -- RIGHT ARROW key
pattern VK_DOWN :: (Eq a, Num a) => a
pattern VK_DOWN = 0x28 -- DOWN ARROW key
pattern VK_SELECT :: (Eq a, Num a) => a
pattern VK_SELECT = 0x29 -- SELECT key
pattern VK_PRINT :: (Eq a, Num a) => a
pattern VK_PRINT = 0x2A -- PRINT key
pattern VK_EXECUTE :: (Eq a, Num a) => a
pattern VK_EXECUTE = 0x2B -- EXECUTE key
pattern VK_SNAPSHOT :: (Eq a, Num a) => a
pattern VK_SNAPSHOT = 0x2C -- PRINT SCREEN key
pattern VK_INSERT :: (Eq a, Num a) => a
pattern VK_INSERT = 0x2D -- INS key
pattern VK_DELETE :: (Eq a, Num a) => a
pattern VK_DELETE = 0x2E -- DEL key
pattern VK_HELP :: (Eq a, Num a) => a
pattern VK_HELP = 0x2F -- HELP key
-- 0x31~0x5A : Digit and alphabet
pattern VK_LWIN :: (Eq a, Num a) => a
pattern VK_LWIN = 0x5B -- Left Windows key (Natural keyboard)
pattern VK_RWIN :: (Eq a, Num a) => a
pattern VK_RWIN = 0x5C -- Right Windows key (Natural keyboard)
pattern VK_APPS :: (Eq a, Num a) => a
pattern VK_APPS = 0x5D -- Applications key (Natural keyboard)
pattern VK_SLEEP :: (Eq a, Num a) => a
pattern VK_SLEEP = 0x5F -- Computer Sleep key
pattern VK_NUMPAD0 :: (Eq a, Num a) => a
pattern VK_NUMPAD0 = 0x60 -- Numeric keypad 0 key
pattern VK_NUMPAD1 :: (Eq a, Num a) => a
pattern VK_NUMPAD1 = 0x61 -- Numeric keypad 1 key
pattern VK_NUMPAD2 :: (Eq a, Num a) => a
pattern VK_NUMPAD2 = 0x62 -- Numeric keypad 2 key
pattern VK_NUMPAD3 :: (Eq a, Num a) => a
pattern VK_NUMPAD3 = 0x63 -- Numeric keypad 3 key
pattern VK_NUMPAD4 :: (Eq a, Num a) => a
pattern VK_NUMPAD4 = 0x64 -- Numeric keypad 4 key
pattern VK_NUMPAD5 :: (Eq a, Num a) => a
pattern VK_NUMPAD5 = 0x65 -- Numeric keypad 5 key
pattern VK_NUMPAD6 :: (Eq a, Num a) => a
pattern VK_NUMPAD6 = 0x66 -- Numeric keypad 6 key
pattern VK_NUMPAD7 :: (Eq a, Num a) => a
pattern VK_NUMPAD7 = 0x67 -- Numeric keypad 7 key
pattern VK_NUMPAD8 :: (Eq a, Num a) => a
pattern VK_NUMPAD8 = 0x68 -- Numeric keypad 8 key
pattern VK_NUMPAD9 :: (Eq a, Num a) => a
pattern VK_NUMPAD9 = 0x69 -- Numeric keypad 9 key
pattern VK_MULTIPLY :: (Eq a, Num a) => a
pattern VK_MULTIPLY = 0x6A -- Multiply key
pattern VK_ADD :: (Eq a, Num a) => a
pattern VK_ADD = 0x6B -- Add key
pattern VK_SEPARATOR :: (Eq a, Num a) => a
pattern VK_SEPARATOR = 0x6C -- Separator key
pattern VK_SUBTRACT :: (Eq a, Num a) => a
pattern VK_SUBTRACT = 0x6D -- Subtract key
pattern VK_DECIMAL :: (Eq a, Num a) => a
pattern VK_DECIMAL = 0x6E -- Decimal key
pattern VK_DIVIDE :: (Eq a, Num a) => a
pattern VK_DIVIDE = 0x6F -- Divide key
pattern VK_F1 :: (Eq a, Num a) => a
pattern VK_F1 = 0x70 -- F1 key
pattern VK_F2 :: (Eq a, Num a) => a
pattern VK_F2 = 0x71 -- F2 key
pattern VK_F3 :: (Eq a, Num a) => a
pattern VK_F3 = 0x72 -- F3 key
pattern VK_F4 :: (Eq a, Num a) => a
pattern VK_F4 = 0x73 -- F4 key
pattern VK_F5 :: (Eq a, Num a) => a
pattern VK_F5 = 0x74 -- F5 key
pattern VK_F6 :: (Eq a, Num a) => a
pattern VK_F6 = 0x75 -- F6 key
pattern VK_F7 :: (Eq a, Num a) => a
pattern VK_F7 = 0x76 -- F7 key
pattern VK_F8 :: (Eq a, Num a) => a
pattern VK_F8 = 0x77 -- F8 key
pattern VK_F9 :: (Eq a, Num a) => a
pattern VK_F9 = 0x78 -- F9 key
pattern VK_F10 :: (Eq a, Num a) => a
pattern VK_F10 = 0x79 -- F10 key
pattern VK_F11 :: (Eq a, Num a) => a
pattern VK_F11 = 0x7A -- F11 key
pattern VK_F12 :: (Eq a, Num a) => a
pattern VK_F12 = 0x7B -- F12 key
pattern VK_F13 :: (Eq a, Num a) => a
pattern VK_F13 = 0x7C -- F13 key
pattern VK_F14 :: (Eq a, Num a) => a
pattern VK_F14 = 0x7D -- F14 key
pattern VK_F15 :: (Eq a, Num a) => a
pattern VK_F15 = 0x7E -- F15 key
pattern VK_F16 :: (Eq a, Num a) => a
pattern VK_F16 = 0x7F -- F16 key
pattern VK_F17 :: (Eq a, Num a) => a
pattern VK_F17 = 0x80 -- F17 key
pattern VK_F18 :: (Eq a, Num a) => a
pattern VK_F18 = 0x81 -- F18 key
pattern VK_F19 :: (Eq a, Num a) => a
pattern VK_F19 = 0x82 -- F19 key
pattern VK_F20 :: (Eq a, Num a) => a
pattern VK_F20 = 0x83 -- F20 key
pattern VK_F21 :: (Eq a, Num a) => a
pattern VK_F21 = 0x84 -- F21 key
pattern VK_F22 :: (Eq a, Num a) => a
pattern VK_F22 = 0x85 -- F22 key
pattern VK_F23 :: (Eq a, Num a) => a
pattern VK_F23 = 0x86 -- F23 key
pattern VK_F24 :: (Eq a, Num a) => a
pattern VK_F24 = 0x87 -- F24 key
pattern VK_NUMLOCK :: (Eq a, Num a) => a
pattern VK_NUMLOCK = 0x90 -- NUM LOCK key
pattern VK_SCROLL :: (Eq a, Num a) => a
pattern VK_SCROLL = 0x91 -- SCROLL LOCK key
pattern VK_LSHIFT :: (Eq a, Num a) => a
pattern VK_LSHIFT = 0xA0 -- Left SHIFT key
pattern VK_RSHIFT :: (Eq a, Num a) => a
pattern VK_RSHIFT = 0xA1 -- Right SHIFT key
pattern VK_LCONTROL :: (Eq a, Num a) => a
pattern VK_LCONTROL = 0xA2 -- Left CONTROL key
pattern VK_RCONTROL :: (Eq a, Num a) => a
pattern VK_RCONTROL = 0xA3 -- Right CONTROL key
pattern VK_LMENU :: (Eq a, Num a) => a
pattern VK_LMENU = 0xA4 -- Left MENU key
pattern VK_RMENU :: (Eq a, Num a) => a
pattern VK_RMENU = 0xA5 -- Right MENU key
pattern VK_BROWSER_BACK :: (Eq a, Num a) => a
pattern VK_BROWSER_BACK = 0xA6 -- Browser Back key
pattern VK_BROWSER_FORWARD :: (Eq a, Num a) => a
pattern VK_BROWSER_FORWARD = 0xA7 -- Browser Forward key
pattern VK_BROWSER_REFRESH :: (Eq a, Num a) => a
pattern VK_BROWSER_REFRESH = 0xA8 -- Browser Refresh key
pattern VK_BROWSER_STOP :: (Eq a, Num a) => a
pattern VK_BROWSER_STOP = 0xA9 -- Browser Stop key
pattern VK_BROWSER_SEARCH :: (Eq a, Num a) => a
pattern VK_BROWSER_SEARCH = 0xAA -- Browser Search key
pattern VK_BROWSER_FAVORITES :: (Eq a, Num a) => a
pattern VK_BROWSER_FAVORITES = 0xAB -- Browser Favorites key
pattern VK_BROWSER_HOME :: (Eq a, Num a) => a
pattern VK_BROWSER_HOME = 0xAC -- Browser Start and Home key
pattern VK_VOLUME_MUTE :: (Eq a, Num a) => a
pattern VK_VOLUME_MUTE = 0xAD -- Volume Mute key
pattern VK_VOLUME_DOWN :: (Eq a, Num a) => a
pattern VK_VOLUME_DOWN = 0xAE -- Volume Down key
pattern VK_VOLUME_UP :: (Eq a, Num a) => a
pattern VK_VOLUME_UP = 0xAF -- Volume Up key
pattern VK_MEDIA_NEXT_TRACK :: (Eq a, Num a) => a
pattern VK_MEDIA_NEXT_TRACK = 0xB0 -- Next Track key
pattern VK_MEDIA_PREV_TRACK :: (Eq a, Num a) => a
pattern VK_MEDIA_PREV_TRACK = 0xB1 -- Previous Track key
pattern VK_MEDIA_STOP :: (Eq a, Num a) => a
pattern VK_MEDIA_STOP = 0xB2 -- Stop Media key
pattern VK_MEDIA_PLAY_PAUSE :: (Eq a, Num a) => a
pattern VK_MEDIA_PLAY_PAUSE = 0xB3 -- Play/Pause Media key
pattern VK_LAUNCH_MAIL :: (Eq a, Num a) => a
pattern VK_LAUNCH_MAIL = 0xB4 -- Start Mail key
pattern VK_LAUNCH_MEDIA_SELECT :: (Eq a, Num a) => a
pattern VK_LAUNCH_MEDIA_SELECT = 0xB5 -- Select Media key
pattern VK_LAUNCH_APP1 :: (Eq a, Num a) => a
pattern VK_LAUNCH_APP1 = 0xB6 -- Start Application 1 key
pattern VK_LAUNCH_APP2 :: (Eq a, Num a) => a
pattern VK_LAUNCH_APP2 = 0xB7 -- Start Application 2 key
pattern VK_OEM_1 :: (Eq a, Num a) => a
pattern VK_OEM_1 = 0xBA -- Used for miscellaneous characters; it can vary by keyboard.
                        -- For the US standard keyboard, the ';:' key
pattern VK_OEM_PLUS :: (Eq a, Num a) => a
pattern VK_OEM_PLUS = 0xBB -- For any country/region, the '+' key
pattern VK_OEM_COMMA :: (Eq a, Num a) => a
pattern VK_OEM_COMMA = 0xBC -- For any country/region, the ',' key
pattern VK_OEM_MINUS :: (Eq a, Num a) => a
pattern VK_OEM_MINUS = 0xBD -- For any country/region, the '-' key
pattern VK_OEM_PERIOD :: (Eq a, Num a) => a
pattern VK_OEM_PERIOD = 0xBE -- For any country/region, the '.' key
pattern VK_OEM_2 :: (Eq a, Num a) => a
pattern VK_OEM_2 = 0xBF -- Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '/?' key
pattern VK_OEM_3 :: (Eq a, Num a) => a
pattern VK_OEM_3 = 0xC0 -- Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '`~' key
pattern VK_OEM_4 :: (Eq a, Num a) => a
pattern VK_OEM_4 = 0xDB -- Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '[{' key
pattern VK_OEM_5 :: (Eq a, Num a) => a
pattern VK_OEM_5 = 0xDC -- Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '\|' key
pattern VK_OEM_6 :: (Eq a, Num a) => a
pattern VK_OEM_6 = 0xDD -- Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the ']}' key
pattern VK_OEM_7 :: (Eq a, Num a) => a
pattern VK_OEM_7 = 0xDE -- Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the 'single-quote/double-quote' key
pattern VK_OEM_8 :: (Eq a, Num a) => a
pattern VK_OEM_8 = 0xDF -- Used for miscellaneous characters; it can vary by keyboard. pattern VK_OEM_102 :: (Eq a, Num a) => a
pattern VK_OEM_102 :: (Eq a, Num a) => a
pattern VK_OEM_102 = 0xE2 -- Either the angle bracket key or the backslash key on the RT 102-key keyboard
pattern VK_PROCESSKEY :: (Eq a, Num a) => a
pattern VK_PROCESSKEY = 0xE5 -- IME PROCESS key
pattern VK_PACKET :: (Eq a, Num a) => a
pattern VK_PACKET = 0xE7 -- Used to pass Unicode characters as if they were keystrokes. The VK_PACKET key is the low word of a 32-bit Virtual Key value used for non-keyboard input methods. For more information, see Remark in KEYBDINPUT, SendInput, WM_KEYDOWN, and WM_KEYUP
pattern VK_ATTN :: (Eq a, Num a) => a
pattern VK_ATTN = 0xF6 -- Attn key
pattern VK_CRSEL :: (Eq a, Num a) => a
pattern VK_CRSEL = 0xF7 -- CrSel key
pattern VK_EXSEL :: (Eq a, Num a) => a
pattern VK_EXSEL = 0xF8 -- ExSel key
pattern VK_EREOF :: (Eq a, Num a) => a
pattern VK_EREOF = 0xF9 -- Erase EOF key
pattern VK_PLAY :: (Eq a, Num a) => a
pattern VK_PLAY = 0xFA -- Play key
pattern VK_ZOOM :: (Eq a, Num a) => a
pattern VK_ZOOM = 0xFB -- Zoom key
pattern VK_NONAME :: (Eq a, Num a) => a
pattern VK_NONAME = 0xFC -- Reserved
pattern VK_PA1 :: (Eq a, Num a) => a
pattern VK_PA1 = 0xFD -- PA1 key
pattern VK_OEM_CLEAR :: (Eq a, Num a) => a
pattern VK_OEM_CLEAR = 0xFE -- Clear key
